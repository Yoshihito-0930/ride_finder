
<section class="body-font">
  <div class="container px-5 py-12 mx-auto">
    <div class="flex flex-wrap w-full mb-10 md:ml-10">
      <div class="lg:w-1/2 w-full mb-6 lg:mb-0">
        <div class="mt-10 mx-3 flex flex-row justify-start">
          <%= link_to "戻る", 'javascript:history.back()' , class: "bg-card-body bg-base-300 border  rounded-full py-2 px-5 hover:bg hover:border-neutral hover:text-neutral focus:outline-none focus:ring-2 focus:ring-offset-2" %>
        </div>
        <div class="h-1 w-20 rounded"></div>
        </div>
      </div>
    <div class="flex justify-center w-full p-8 mx-auto rounded-lg bg-base-200">
      <% if @destination %>
        <ul>
          <li class="text-lg py-4"><%= @destination.name %> </li>
          <div class="favorite flex-none flex justify-end">
            <% if logged_in? %>
            <%= render 'shared/future_visit_button', destination: @destination %>
              <%= render 'shared/favorite', destination: @destination %>
            <% end %>
          </div>
          <% if @destination.image.present? %>
            <li><%= image_tag "data:image/jpeg;base64,#{@destination.image}", size: "500x400" %></li>
          <% end %>
          <li><%= @destination.address %> </li>
          <% if @destination.rating %>
            <li><a >評価:<%= @destination.rating %>(レビュー件数:<%=@destination.user_ratings_total%>件)</a> </li>
          <% end %>
          <% if @destination.website %>
            <li><%= link_to "この場所の公式情報を見る", "#{@destination.website}", target: :_blank %> </li>
          <% end %>
          <li><%= link_to "Google Mapで開く", "https://maps.app.goo.gl/?link=https://www.google.com/maps/place/?q=place_id:#{sanitize(@destination.google_maps_place_id)}", target: :_blank %> </li>
        </ul>
      <% end %>
    </div>
    <div class="flex flex-col sm:flex-row flex-wrap justify-center items-center rounded-lg bg-base-200">
     <div id="map" style="height: 400px; width: 700px;" class="w-full sm:w-1/2 h-64 sm:h-96"></div>
     <div id="pano" style="height: 400px; width: 700px;" class="w-full sm:w-1/2 h-64 sm:h-96"></div>
    </div>
  </div>
<div>

<script>
  let map;
  let mapInitialized = false;
  const destinationLat = Number("<%= @destination.latitude %>")
  const destinationLng = Number("<%= @destination.longitude %>")
  const setLocation = { lat: destinationLat, lng: destinationLng };
  
  console.log(`destinationLat${destinationLat}`)
  console.log(`destinationLng${destinationLng}`)
  console.log(`setLocationは${setLocation}`)

  function initMap() {
    if (mapInitialized) {
      return;
    }
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function(position) {
          currentLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          map = new google.maps.Map(
            document.getElementById("map"),
            {
              center: setLocation,
              zoom: 11,
              fullscreenControl: false,
              streetViewControl: false,
              keyboardShortcuts: false,
              mapTypeControl: true,
            }
          );
          setCurrentLocationMarker(currentLocation, map);
          setDestinationMarker(setLocation, map)
          streetViewService(setLocation)
        },
        function(error) {
          console.error("Error occurred. Error code: " + error.code);
          map = new google.maps.Map(
            document.getElementById("map"),
            {
              center: setLocation,
              zoom: 10,
            }
          );
          setDestinationMarker(setLocation, map)
          streetViewService(setLocation)
          mapInitialized = true;
        }
      );
      mapInitialized = true;
    } else { // Geolocation APIをサポートしていないブラウザの処理
      console.log("ブラウザがGeolocation APIに対応しておりませんを追加")
        map = new google.maps.Map(
          document.getElementById("map"),
          {
            center: setLocation,
            zoom: 10,
            fullscreenControl: false,
            streetViewControl: false,
            keyboardShortcuts: false,
            mapTypeControl: true,
          }
        );
      setDestinationMarker(setLocation, map)
      streetViewService(setLocation)
      mapInitialized = true;
    }
  }

  function setDestinationMarker(setLocation, map){
    new google.maps.Marker({
      map: map,
      title: "<%= @destination.name %>",
      position: setLocation
    });
  }

  function streetViewService(setLocation){
    new google.maps.StreetViewPanorama(
      document.getElementById('pano'), {
        position: setLocation,
        pov: {heading: 0, pitch: 0, zoom: 0},
        motionTracking: false,
        motionTrackingControl: false,
        fullscreenControl: false,
        linksControl: false,
      }
   );
  }

  // 現在地を示す青丸のアイコン
  function setCurrentLocationMarker(currentLocation, map){
    new google.maps.Marker({
        position: currentLocation,
        map: map,
        icon: {
          path: google.maps.SymbolPath.CIRCLE,
          fillColor: '#115EC3',
          fillOpacity: 1,
          strokeColor: 'white',
          strokeWeight: 2,
          scale: 7
        },
    });
  }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&libraries=geometry&callback=initMap"></script>